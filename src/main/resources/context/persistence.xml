<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:util="http://www.springframework.org/schema/util"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/util 
      http://www.springframework.org/schema/util/spring-util.xsd
      http://www.springframework.org/schema/data/jpa
      http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd">

   <!-- Imports -->
   <import resource="classpath:context/atomikos.xml" />

   <!-- ============================= CONFIGURATION ============================= -->

   <!-- Repositories -->
   <jpa:repositories base-package="com.bernardomg.tabletop.palette.**.repository" />

   <!-- ================================== JPA ================================== -->

   <!-- JPA EntityManagerFactory -->
   <bean id="entityManagerFactory" class="${jpa.entityManagerFactory.class}">
      <property name="jpaVendorAdapter" ref="jpaAdapter" />
      <property name="dataSource" ref="dataSource" />
      <property name="persistenceUnitName" value="${jpa.persistenceUnitName}" />
      <property name="packagesToScan" value="${jpa.packagesToScan}" />
      <property name="jpaProperties" ref="jpaProperties" />
   </bean>

   <!-- JPA Adapter -->
   <bean id="jpaAdapter" class="${jpa.adapter.class}">
      <property name="database" value="${jpa.database}" />
      <property name="showSql" value="${jpa.showSql}" />
   </bean>

   <!-- JPA Properties -->
   <util:map id="jpaProperties">
      <entry key="hibernate.dialect" value="${hibernate.dialect}" />
      <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
      <entry key="hibernate.ejb.naming_strategy" value="${hibernate.namingStrategy}" />
      <entry key="hibernate.show_sql" value="${jpa.showSql}" />
      <entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
      <entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}" />
      <entry key="hibernate.cache.use_query_cache" value="${hibernate.cache.use_query_cache}" />
      <entry key="hibernate.cache.region.factory_class" value="${hibernate.cache.region.factory_class}" />
   </util:map>

   <!-- Entity manager -->
   <bean id="entityManager" class="${jpa.entityManager.class}">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
   </bean>

   <!-- Atomikos -->
   <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
      init-method="init" destroy-method="shutdownForce">
      <constructor-arg>
         <!-- IMPORTANT: specify all Atomikos properties here -->
         <props>
            <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
         </props>
      </constructor-arg>
   </bean>
 
   <bean id="AtomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
      init-method="init" destroy-method="close" depends-on="userTransactionService">
      <!-- IMPORTANT: disable startup because the userTransactionService above does this -->
      <property name="startupTransactionService" value="false"/>
      <property name="forceShutdown" value="false" />
   </bean> 
 
   <bean id="AtomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
      depends-on="userTransactionService">
      <property name="transactionTimeout" value="300" />
   </bean>

   <!-- Transaction manager -->
   <bean id="transactionManager" class="${jpa.transactionManager.class}" depends-on="userTransactionService">
      <property name="transactionManager" ref="AtomikosTransactionManager" /> 
      <property name="userTransaction" ref="AtomikosUserTransaction" /> 
   </bean>

   <!-- Activates transactionality -->
   <tx:annotation-driven transaction-manager="transactionManager" />

</beans>